"""Another 6

Revision ID: f995283f8ccc
Revises: 403b7563bcbf
Create Date: 2023-05-16 11:53:30.291703

"""
from alembic import op
import sqlalchemy as sa
from app import app, db
import time
import sys
import psycopg2
import pandas as pd
import csv


def get_columns_type(df):
    column_types = []
    for column in df.columns:
        column_type = df[column].dtype
        if column_type == 'int64':
            column_types.append(f"INTEGER")
        elif column_type == 'float64':
            column_types.append(f"FLOAT")
        else:
            column_types.append(f"TEXT")
    return column_types

# revision identifiers, used by Alembic.
revision = 'f995283f8ccc'
down_revision = '403b7563bcbf'
branch_labels = None
depends_on = None



def upgrade():


    df = pd.read_csv('Odata2020File.csv', encoding='windows-1251', delimiter=';')

    # робимо список з типв клонок
    column_types = get_columns_type(df)

    # create table
    column_names_str = ', '.join(df.columns.map(lambda x: f'"{x}"').tolist())
    fields = df.columns











    # df = pd.read_csv('Odata2020File.csv', encoding='windows-1251', delimiter=';')
    #
    # # робимо список з типв клонок
    # column_types = get_columns_type(df)
    #
    # # create table
    # column_names_str = ', '.join(df.columns.map(lambda x: f'"{x}"').tolist())
    # fields = df.columns

    #     outid = db.Column(db.Text, primary_key=True)
    #     birth = db.Column(db.Integer, unique=False)
    #     sextypename = db.Column(db.Text, unique=False)
    #     regname = db.Column(db.Text, unique=False)
    #     areaname = db.Column(db.Text, unique=False)
    #     tername = db.Column(db.Text, unique=False)
    #     regtypename = db.Column(db.Text, unique=False)
    #     tertypename = db.Column(db.Text, unique=False)
    #     classprofilename = db.Column(db.Text, unique=False)
    #     classlangname = db.Column(db.Text, unique=False)



    class Studentss(db.Model):
        outid = db.Column(db.Text, primary_key=True)
        birth = db.Column(db.Text, unique=False)
        sextypename = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        areaname = db.Column(db.Text, unique=False)
        tername = db.Column(db.Text, unique=False)
        regtypename = db.Column(db.Text, unique=False)
        tertypename = db.Column(db.Text, unique=False)
        classprofilename = db.Column(db.Text, unique=False)
        classlangname = db.Column(db.Text, unique=False)

    for i in range(100):
        new_table_data = Studentss(outid=df.iloc[i][0], birth=str(df.iloc[i][1]),sextypename =df.iloc[i][2]  ,regname=df.iloc[i][3] , areaname=df.iloc[i][4],tername =df.iloc[i][5],regtypename =df.iloc[i][6],tertypename=df.iloc[i][7],classprofilename=df.iloc[i][8] , classlangname =df.iloc[i][9] )
        db.session.add(new_table_data)




    # data_to_move = db.session.query(testtt2.outid, testtt2.birth, testtt2.sextypename, testtt2.regname,testtt2.areaname, testtt2.tername,testtt2.regtypename, testtt2.tertypename,testtt2.classprofilename,testtt2.classlangname).all()
    # for id,birth, sextype,regname , areaname,tername ,regtypename ,tertypename,classprofilename , classlangname in data_to_move:
    #     new_table_data = Students(id=id, birth=birth,sextype =sextype  ,regname=regname , areaname=areaname,tername =tername,regtypename =regtypename,tertypename=tertypename,classprofilename=classprofilename , classlangname =classlangname )
    #     db.session.add(new_table_data)

    db.create_all()
    db.session.commit()




def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hist',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='hist_pkey')
    )
    op.create_table('deut',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='deut_pkey')
    )
    op.create_table('ukr',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='ukr_pkey')
    )
    op.create_table('phys',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='phys_pkey')
    )
    op.create_table('students',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('birth', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sextype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('areaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regtypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tertypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classprofilename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classlangname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='students_pkey')
    )
    op.create_table('geo',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='geo_pkey')
    )
    op.create_table('engl',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='engl_pkey')
    )
    op.create_table('spa',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='spa_pkey')
    )
    op.create_table('chem',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='chem_pkey')
    )
    op.create_table('bio',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='bio_pkey')
    )
    op.create_table('fra',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='fra_pkey')
    )
    op.create_table('school',
    sa.Column('school_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('eoname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eotypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eotername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoparent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('school_id', name='school_pkey')
    )
    op.create_table('math',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='math_pkey')
    )
    # ### end Alembic commands ###
