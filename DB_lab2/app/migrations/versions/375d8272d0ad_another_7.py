"""Another 7

Revision ID: 375d8272d0ad
Revises: f995283f8ccc
Create Date: 2023-05-16 15:27:07.366817

"""
from alembic import op
import sqlalchemy as sa

from app import app, db
import time
import sys
import psycopg2
import pandas as pd
import csv


def get_columns_type(df):
    column_types = []
    for column in df.columns:
        column_type = df[column].dtype
        if column_type == 'int64':
            column_types.append(f"INTEGER")
        elif column_type == 'float64':
            column_types.append(f"FLOAT")
        else:
            column_types.append(f"TEXT")
    return column_types


# revision identifiers, used by Alembic.
revision = '375d8272d0ad'
down_revision = 'f995283f8ccc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ukr')
    op.drop_table('studentss')
    op.drop_table('chem')
    op.drop_table('bio')
    op.drop_table('engl')
    op.drop_table('fra')
    op.drop_table('phys')
    op.drop_table('math')
    op.drop_table('hist')
    op.drop_table('deut')
    op.drop_table('spa')
    op.drop_table('geo')
    op.drop_table('students')
    op.drop_table('school')



    class Students(db.Model):
        outid = db.Column(db.Text, primary_key=True)
        birth = db.Column(db.Text, unique=False)
        sextypename = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        areaname = db.Column(db.Text, unique=False)
        tername = db.Column(db.Text, unique=False)
        regtypename = db.Column(db.Text, unique=False)
        tertypename = db.Column(db.Text, unique=False)
        classprofilename = db.Column(db.Text, unique=False)
        classlangname = db.Column(db.Text, unique=False)


    class School(db.Model):
        school_id = db.Column(db.Integer, primary_key=True)
        eoname = db.Column(db.Text, unique=False)
        eotypename = db.Column(db.Text, unique=False)
        eoregname = db.Column(db.Text, unique=False)
        eoareaname = db.Column(db.Text, unique=False)
        eotername = db.Column(db.Text, unique=False)
        eoparent = db.Column(db.Text, unique=False)


    class Ukr(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Hist(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Math(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Phys(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Chem(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Bio(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Geo(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Engl(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Fra(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Deut(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)

    class Spa(db.Model):
        student_id = db.Column(db.Integer, primary_key=True)
        nametest = db.Column(db.Text, unique=False)
        teststatus = db.Column(db.Text, unique=False)
        ball100 = db.Column(db.Text, unique=False)
        ball12 = db.Column(db.Text, unique=False)
        ball = db.Column(db.Text, unique=False)
        adaptscale = db.Column(db.Text, unique=False)
        ptname = db.Column(db.Text, unique=False)
        regname = db.Column(db.Text, unique=False)
        ptareaname = db.Column(db.Text, unique=False)
        pttername = db.Column(db.Text, unique=False)



    insert_query = f"""
            INSERT INTO {table_model.tablename} ({', '.join(col_names)})
            VALUES ({', '.join(col_names_with_points)})
            """
    db.session.execute(insert_query, res)

    db.create_all()
    db.session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('school',
    sa.Column('school_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('eoname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eotypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eotername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoparent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('school_id', name='school_pkey')
    )
    op.create_table('students',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('birth', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sextype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('areaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regtypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tertypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classprofilename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classlangname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='students_pkey')
    )
    op.create_table('geo',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='geo_pkey')
    )
    op.create_table('spa',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='spa_pkey')
    )
    op.create_table('deut',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='deut_pkey')
    )
    op.create_table('hist',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='hist_pkey')
    )
    op.create_table('math',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='math_pkey')
    )
    op.create_table('phys',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='phys_pkey')
    )
    op.create_table('fra',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='fra_pkey')
    )
    op.create_table('testtt2',
    sa.Column('outid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('birth', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sextypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('areaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regtypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tertypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classprofilename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classlangname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eotypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eotername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('eoparent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ukrtest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ukrteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ukrball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ukrball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ukrball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ukradaptscale', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ukrptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ukrptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ukrptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ukrpttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histtest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histlang', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('histball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('histptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('histpttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathtest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathlang', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('mathball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('mathptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mathpttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('phystest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('physlang', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('physteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('physball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('physball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('physball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('physptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('physptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('physptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('physpttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chemtest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chemlang', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chemteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chemball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chemball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('chemball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('chemptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chemptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chemptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chempttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('biotest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('biolang', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bioteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bioball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bioball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bioball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bioptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bioptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bioptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('biopttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geotest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geolang', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geoteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geoball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geoball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('geoball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('geoptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geoptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geoptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('geopttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engtest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('engdpalevel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('engptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('engpttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fratest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('frateststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fraball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fraball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fradpalevel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fraball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fraptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fraptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fraptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('frapttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deutest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deuteststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deuball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deuball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('deudpalevel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deuball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('deuptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deuptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deuptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deupttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spatest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spateststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spaball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spaball12', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('spadpalevel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spaball', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('spaptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spaptregname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spaptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('spapttername', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('engl',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='engl_pkey')
    )
    op.create_table('bio',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='bio_pkey')
    )
    op.create_table('chem',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='chem_pkey')
    )
    op.create_table('studentss',
    sa.Column('outid', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('birth', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sextypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('areaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regtypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tertypename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classprofilename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('classlangname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('outid', name='studentss_pkey')
    )
    op.create_table('ukr',
    sa.Column('student_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nametest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teststatus', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball100', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ball', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('adaptscale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ptareaname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pttername', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='ukr_pkey')
    )
    # ### end Alembic commands ###
